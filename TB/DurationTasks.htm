<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>ActiveGanttJQW - Duration Tasks</title>
    <script src="../Scripts/jquery-2.0.3.js" type="text/javascript"></script>
    <script src="../Scripts/jquery.ui.widget.js" type="text/javascript"></script>
    <script src="../Scripts/AGJQW_3_2_0D.min.js" type="text/javascript"></script>
    <link href="../CSS/Toolbar.css" rel="stylesheet" type="text/css" />
    <script>

        var ActiveGanttJQWCtl1;

        $(document).ready(function () {

            $('#oActiveGantt').ActiveGanttJQWCtl();
            ActiveGanttJQWCtl1 = $('#oActiveGantt').ActiveGanttJQWCtl("GetControl");

            ActiveGanttJQWCtl1.ApplyTemplate(AGJQW.E_CONTROLTEMPLATE.STC_CH_VGRAD_ANAKIWA_BLUE, AGJQW.E_OBJECTTEMPLATE.STO_DEFAULT);

            ActiveGanttJQWCtl1.AddMode = AGJQW.E_ADDMODE.AT_DURATION_BOTH;
            ActiveGanttJQWCtl1.AddDurationInterval = AGJQW.E_INTERVAL.IL_HOUR;

            var oView;
            oView = ActiveGanttJQWCtl1.Views.Add(AGJQW.E_INTERVAL.IL_MINUTE, 10, AGJQW.E_TIERTYPE.ST_MONTH, AGJQW.E_TIERTYPE.ST_NOT_VISIBLE, AGJQW.E_TIERTYPE.ST_DAYOFWEEK, "View1");
            oView.TimeLine.TickMarkArea.Visible = false;

            ActiveGanttJQWCtl1.CurrentView = "View1";

            var i = 0;
            for (i = 0; i <= 110; i++)
            {
                ActiveGanttJQWCtl1.Rows.Add("K" + i);
            }

            var oTimeBlock;

            //Note: non-working overlapping TimeBlock objects are combined for duration calculation purposes.


            // TimeBlock starts at 6:00pm and ends on 7:00am next day (13 Hours)
            // This TimeBlock is repeated every day.
            oTimeBlock = ActiveGanttJQWCtl1.TimeBlocks.Add("TB_OutOfOfficeHours");
            oTimeBlock.NonWorking = true;
            oTimeBlock.BaseDate = new AGJQW.DateTime(2000, 1, 1, 18, 0, 0);
            oTimeBlock.DurationInterval = AGJQW.E_INTERVAL.IL_HOUR;
            oTimeBlock.DurationFactor = 13;
            oTimeBlock.TimeBlockType = AGJQW.E_TIMEBLOCKTYPE.TBT_RECURRING;
            oTimeBlock.RecurringType = AGJQW.E_RECURRINGTYPE.RCT_DAY;

            // TimeBlock starts at 12:00pm (noon) and ends at 1:30pm (90 Minutes)
            // This TimeBlock is repeated every day. 
            oTimeBlock = ActiveGanttJQWCtl1.TimeBlocks.Add("TB_LunchBreak");
            oTimeBlock.NonWorking = true;
            oTimeBlock.BaseDate = new AGJQW.DateTime(2000, 1, 1, 12, 0, 0);
            oTimeBlock.DurationInterval = AGJQW.E_INTERVAL.IL_MINUTE;
            oTimeBlock.DurationFactor = 90;
            oTimeBlock.TimeBlockType = AGJQW.E_TIMEBLOCKTYPE.TBT_RECURRING;
            oTimeBlock.RecurringType = AGJQW.E_RECURRINGTYPE.RCT_DAY;

            // Timeblock starts at 12:00am Saturday and ends on 12:00am Monday (48 Hours)
            // This TimeBlock is repeated every week.
            oTimeBlock = ActiveGanttJQWCtl1.TimeBlocks.Add("TB_Weekend");
            oTimeBlock.NonWorking = true;
            oTimeBlock.BaseDate = new AGJQW.DateTime(2000, 1, 1, 0, 0, 0);
            oTimeBlock.DurationInterval = AGJQW.E_INTERVAL.IL_HOUR;
            oTimeBlock.DurationFactor = 48;
            oTimeBlock.TimeBlockType = AGJQW.E_TIMEBLOCKTYPE.TBT_RECURRING;
            oTimeBlock.RecurringType = AGJQW.E_RECURRINGTYPE.RCT_WEEK;
            oTimeBlock.BaseWeekDay = AGJQW.E_WEEKDAY.WD_SATURDAY;

            // Arbitrary holiday that starts at 12:00am January 8th and ends on 12:00am January 9th (24 hours)
            // This TimeBlock is repeated every year.
            oTimeBlock = ActiveGanttJQWCtl1.TimeBlocks.Add("TB_Jan8");
            oTimeBlock.NonWorking = true;
            oTimeBlock.BaseDate = new AGJQW.DateTime(2000, 1, 8, 0, 0, 0);
            oTimeBlock.DurationInterval = AGJQW.E_INTERVAL.IL_HOUR;
            oTimeBlock.DurationFactor = 24;
            oTimeBlock.TimeBlockType = AGJQW.E_TIMEBLOCKTYPE.TBT_RECURRING;
            oTimeBlock.RecurringType = AGJQW.E_RECURRINGTYPE.RCT_YEAR;

            ActiveGanttJQWCtl1.TimeBlocks.IntervalStart = new AGJQW.DateTime(2012, 1, 1);
            ActiveGanttJQWCtl1.TimeBlocks.IntervalEnd = new AGJQW.DateTime(2023, 6, 1);
            ActiveGanttJQWCtl1.TimeBlocks.IntervalType = AGJQW.E_TBINTERVALTYPE.TBIT_MANUAL;
            ActiveGanttJQWCtl1.TimeBlocks.CalculateInterval();


            var oTask;
            for (i = 0; i <= 100; i++)
            {
                oTask = ActiveGanttJQWCtl1.Tasks.DAdd("K" + i, new AGJQW.DateTime(2013, 1, 1), AGJQW.E_INTERVAL.IL_HOUR, i, i.toString(), "", "", "0");
            }

            ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.Position(new AGJQW.DateTime(2013, 1, 1));

            window.addEventListener('resize', mp_WindowResize, true);

            mp_WindowResize();

        });

        function mp_WindowResize() {
            $('#oActiveGantt').height(window.innerHeight - 60);
            $('#oActiveGantt').ActiveGanttJQWCtl("Resize");
        }

        function cmdBack2_Click() {
            ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.Position(ActiveGanttJQWCtl1.MathLib.DateTimeAdd(AGJQW.E_INTERVAL.IL_HOUR, -24 * 7, ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.StartDate));
            ActiveGanttJQWCtl1.Redraw();
        }

        function cmdBack1_Click() {
            ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.Position(ActiveGanttJQWCtl1.MathLib.DateTimeAdd(AGJQW.E_INTERVAL.IL_HOUR, -24, ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.StartDate));
            ActiveGanttJQWCtl1.Redraw();
        }

        function cmdBack0_Click() {
            ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.Position(ActiveGanttJQWCtl1.MathLib.DateTimeAdd(AGJQW.E_INTERVAL.IL_HOUR, -1, ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.StartDate));
            ActiveGanttJQWCtl1.Redraw();
        }

        function cmdFwd0_Click() {
            ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.Position(ActiveGanttJQWCtl1.MathLib.DateTimeAdd(AGJQW.E_INTERVAL.IL_HOUR, 1, ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.StartDate));
            ActiveGanttJQWCtl1.Redraw();
        }

        function cmdFwd1_Click() {
            ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.Position(ActiveGanttJQWCtl1.MathLib.DateTimeAdd(AGJQW.E_INTERVAL.IL_HOUR, 24, ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.StartDate));
            ActiveGanttJQWCtl1.Redraw();
        }

        function cmdFwd2_Click() {
            ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.Position(ActiveGanttJQWCtl1.MathLib.DateTimeAdd(AGJQW.E_INTERVAL.IL_HOUR, 24 * 7, ActiveGanttJQWCtl1.CurrentViewObject.TimeLine.StartDate));
            ActiveGanttJQWCtl1.Redraw();
        }

    </script>
</head>
<body>

    <div class="Toolbar">
        <input type="image" src="../Images/Toolbars/back2.png" alt="" onclick="cmdBack2_Click();">
        <input type="image" src="../Images/Toolbars/back1.png" alt="" onclick="cmdBack1_Click();">
        <input type="image" src="../Images/Toolbars/back0.png" alt="" onclick="cmdBack0_Click();">
        <input type="image" src="../Images/Toolbars/fwd0.png" alt="" onclick="cmdFwd0_Click();">
        <input type="image" src="../Images/Toolbars/fwd1.png" alt="" onclick="cmdFwd1_Click();">
        <input type="image" src="../Images/Toolbars/fwd2.png" alt="" onclick="cmdFwd2_Click();">
    </div>

    <div id="oActiveGantt" style="width: 100%; height: 100%; ">
    </div>

</body>
</html>
